//59.	Create a class Voter(voterId, name, age) with parameterized constructor.  
//The parameterized constructor should throw a checked exception if age is less than 18. 
//The message of exception is “invalid age for voter ”

class Voter{
	int voterId;
	String vName;
	int age;
	
	Voter(int voterId, String vName,int age ){
		if(age<18) {
			
			try {
				throw new Exception("invalid age for voter");
			} catch (Exception e) {
				
				System.out.println(e);
			}
		}
		else {
			this.age=age;
			this.voterId=voterId;
			this.vName=vName;
		}
		
	}

	public String display() {
		return "Voter [voterId=" + voterId + ", vName=" + vName + ", age=" + age + "]";
	}
		
}

public class Q59 {

	public static void main(String[] args) {
		Voter a = new Voter(1,"Abc",12);
		System.out.println(a.display());
		Voter a1 = new Voter(1,"Abc",22);
		System.out.println(a.display());
	}
	
}

//60.	Create Interface StudentFee and declare following method. 
//getFee() throws InvalidFeeException. This method ask fees from user 
//and throws exception if user enters invalid or negative fees Create
//class Student with members (name, fees) and implement the StudentFee Interface.

import java.util.Scanner;

interface StudentFee{
	int getFee();
}

public class Q60 implements StudentFee {
	
	static String name;
	int fee;
	
	public static void main(String[] args) {
		System.out.println("Enter name : ");
		Scanner sc = new Scanner(System.in);
		Q60 q = new Q60();
		q.name = sc.next();
		q.fee = q.getFee();
		System.out.println("Name : "+q.name+" Fee : "+q.fee);
	}

	@Override
	public int getFee() {
		System.out.println("Enter the Fee : ");
		Scanner sc = new Scanner(System.in);
		fee = sc.nextInt();
		if(fee<0) {
			try {
				throw new Exception("InvalidFeeException");
			} catch (Exception e) {
				// TODO Auto-generated catch block
				System.out.println(e);
			}
		}else {
		return fee;
		}
		return 0;
	}

}

//61.	Create a Thread class to print following star (*) pattern on screen with delay of 1 second between each * print.
//Number of lines in the pattern should be passed to the constructor of Thread class. 
//*  * * * *  * * * * * * * * * * 
//Use this class in main method and ask user to enter number of lines to print.

import java.util.Scanner;

class MyThread extends Thread {
	int num;
	
	public MyThread(int num) {
		super();
		this.num = num;
	}

	public void run() {
		for(int i=1;i<=num;i++) {
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			System.out.print("*"+" ");
		}
		System.out.println("\nEND");
	}
}

public class Q61 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number : ");
		int n = sc.nextInt();
		MyThread m = new MyThread(n);
		m.start();
	}

}

//62.	Create a class that checks whether a given number is prime or not using  Runnable interface.


import java.util.Scanner;

public class Q62 {

	public static void main(String[] args) {
		int n;
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the number : ");
		n = sc.nextInt();
		MyThread t = new MyThread(n);

		t.run();

	}
}

class MyThread implements Runnable {

	int n;

	public MyThread(int n) {
		super();
		this.n = n;
	}

	@Override
	public void run() {
		int i, m = 0, flag = 0;
		m = n / 2;
		if (n == 0 || n == 1) {
			System.out.println(n + " is not prime number");
		} else {
			for (i = 2; i <= m; i++) {
				if (n % i == 0) {
					System.out.println(n + " is not prime number");
					flag = 1;
					break;
				}
			}
			if (flag == 0) {
				System.out.println(n + " is prime number");
			}
		}
	}
}

// 63.	Write a program to count how many times character ‘t’ occurs in a file. 

import java.util.Scanner;

class Ques63 { 
	static final int MAX_CHAR = 256; 

	static void getOccuringChar(String str) 
	{ 
		 
		int count[] = new int[MAX_CHAR]; 

		int len = str.length(); 

		for (int i = 0; i < len; i++) 
			count[str.charAt(i)]++; 

		char ch[] = new char[str.length()]; 
		for (int i = 0; i < len; i++) { 
			ch[i] = str.charAt(i); 
			int find = 0; 
			for (int j = 0; j <= i; j++) { 

				if (str.charAt(i) == ch[j]) 
					find++;				 
			} 

			if (find == 1) 
				System.out.println("Number of Occurrence of " + 
				str.charAt(i) + " is:" + count[str.charAt(i)]);			 
		} 
	} 
	public static void main(String[] args) 
	{ 
		Scanner sc = new Scanner(System.in); 
		String str = "Cdac Kharghar"; 
		getOccuringChar(str); 
	} 
} 

//64.	Write a program to count no of words in a text file and average word size.

import java.io.BufferedReader;  
import java.io.FileReader;  
   
public class Ques64   
{  
    public static void main(String[] args) throws Exception {  
        String line;  
        int count = 0;  
          
        FileReader file = new FileReader("D://CDAC//JAVA//CDAC//Java//TextSol//Assign1.txt");  
        BufferedReader br = new BufferedReader(file);  
       
        while((line = br.readLine()) != null) {  
              
            String words[] = line.split(" ");  
            
            count = count + words.length;  
        }  
          
        System.out.println("Number of words present in given file: " + count);  
        br.close();  
    }  
} 

//65.	Write a program to count number of bytes in a image file(jpeg/png/gif).  Also find how much time it will //take to upload the file on server if internet speed is 256 bps(bits per second).


import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import com.sun.org.apache.xerces.internal.impl.dv.util.Base64;
 
 
public class Ques65 {
	public static void main(String[] args) throws IOException{
		String dirName="C:\\Users\\Admin\\OneDrive\\Pictures\\Screenshots";
		ByteArrayOutputStream baos=new ByteArrayOutputStream(1000);
		BufferedImage img=ImageIO.read(new File(dirName,"dip.png"));
		ImageIO.write(img, "jpg", baos);
		baos.flush();
 
		String base64String=Base64.encode(baos.toByteArray());
		baos.close();
 
		byte[] bytearray = Base64.decode(base64String);
 
		BufferedImage imag=ImageIO.read(new ByteArrayInputStream(bytearray));
		ImageIO.write(imag, "jpg", new File(dirName,"snap.jpg"));
	}
}

//66.	Write a program to store your shopping details in a binary file(shopping.dat) with information itemName, //price, quantity. (Use ObjectOutputStream to store Item class object ).

import java.io.Serializable;

public class Ques66 implements Serializable {

	private static final long serialVersionUID = -299482035708790407L;

	private String name;
	private String gender;
	private int age;

	private String role;

	public Ques66(String n) {
		this.name = n;
	}

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public int getAge() {
		return age;
	}

	public void setAge(int age) {
		this.age = age;
	}

	public String getRole() {
		return role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Override
	public String toString() {
		return "Employee:: Name=" + this.name + " Age=" + this.age + " Gender=" + this.gender + " Role=" + this.role;
	}

}

//67.	Write a program to read data from shopping.dat file creted in above problem and find total money spent on //all shopping items. . (Use ObjectInputStream to read Item class object).

import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;

public class Ques67 {

	public static void main(String[] args) {
		try {
			FileInputStream is = new FileInputStream("D://CDAC//JAVA//CDAC//Java//TextSol//Assign1.txt");
			ObjectInputStream ois = new ObjectInputStream(is);
			Ques67 emp = (Ques67) ois.readObject();
			ois.close();
			is.close();
			System.out.println(emp.toString());
		} catch (ClassNotFoundException | IOException e) {
			e.printStackTrace();
		}
	}

}